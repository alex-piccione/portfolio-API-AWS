# This workflow is used to chech the code changes in pull requests

name: Pull Request Checks
env:
  MongoDB__connection string: ${{secrets.MONGODB_CONNECTION_STRING}}

on: 
  pull_request:
    types: [opened, synchronize, reopened, labeled, unlabeled]
  
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions-ecosystem/action-remove-labels@v1
      #if: github.event.action != 'labeled'
      if: github.event.action != 'labeled' || 
          github.event.action == 'unlabeled' && github.event.label.name == 'pr:draft'
      with:
        labels: |
          build:success
          build:failure
    - name: Checkout
      uses: actions/checkout@v3
    - name: Buid VS solution
      id: build
      run: dotnet build "FSharp project/Portfolio AWS API.sln" -c RELEASE

  unit-tests:
    name: Unit Tests
    needs: [build]
    if: false == contains(github.event.pull_request.labels.*.name, 'pr:draft')
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Unit Tests
      id: unit-tests
      run: dotnet test "FSharp project/UnitTests/UnitTests.fsproj" -c Release --filter "TestCategory!=SKIP_ON_DEPLOY"

  integration-tests:
    name: Integration Tests
    needs: [build]
    if: ${{ ! contains(github.event.pull_request.labels.*.name, 'pr:draft') }}
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Integration Tests
      id: integration-tests      
      run: dotnet test "FSharp project/IntegrationTests/IntegrationTests.fsproj" -c Release --filter "TestCategory!=SKIP_ON_DEPLOY"

  # We mark the build Success only when build and all the tests passes
  label_success:
    runs-on: ubuntu-latest
    #if: github.event.action != 'labeled'
    #if: github.event.action == 'pull_request' || github.event.action == 'synchronize'
    needs: [build, unit-tests, integration-tests]
    steps:
      - uses: actions-ecosystem/action-add-labels@v1
        with:
          labels: build:success

  #label_failure:
  #  runs-on: ubuntu-latest
  #  #if: github.event.action != 'labeled'
  #  ${{ ! contains(github.event.pull_request.labels.*.name, 'pr:draft') }}
  #  if: github.event.action == 'pull_request'
  #  needs: [build, unit-tests, integration-tests]
  #  steps:
  #    - uses: actions-ecosystem/action-add-labels@v1
  #      with:
  #        labels: build:failure